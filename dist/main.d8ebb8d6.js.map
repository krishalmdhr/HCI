{"version":3,"sources":["scripts/main.js"],"names":["window","onload","listings","Array","from","document","getElementsByClassName","forEach","listing","handleSlider","listingsGrid","arrowLeft","arrowRight","console","log","addEventListener","e","preventDefault","handleClassChange","scrollTo","left","offsetWidth","behaviour","direction","classList","remove","add"],"mappings":"AAAAA,MAAM,CAACC,MAAP,GAAgB,YAAM;AACnB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,CAAX,CAAjB,CADmB,CAGnB;;AACAJ,EAAAA,QAAQ,CAACK,OAAT,CAAiB,UAAAC,OAAO;AAAA,WAAIC,YAAY,CAACD,OAAD,CAAhB;AAAA,GAAxB;AACF,CALD,EAOA;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAD,OAAO,EAAI;AAC7B,MAAME,YAAY,GAAGF,OAAO,CAACF,sBAAR,CAA+B,eAA/B,EAAgD,CAAhD,CAArB;AACA,MAAMK,SAAS,GAAGH,OAAO,CAACF,sBAAR,CAA+B,MAA/B,EAAuC,CAAvC,CAAlB;AACA,MAAMM,UAAU,GAAGJ,OAAO,CAACF,sBAAR,CAA+B,OAA/B,EAAwC,CAAxC,CAAnB;;AAEA,MAAI,CAACI,YAAD,IAAiB,CAACC,SAAlB,IAA+B,CAACC,UAApC,EAAgD;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA;AACF;;AAEDI,EAAAA,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAqC,UAAAC,CAAC,EAAI;AACvC;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AAEAR,IAAAA,YAAY,CAACS,QAAb,CAAsB;AACnBC,MAAAA,IAAI,EAAEV,YAAY,CAACW,WADA;AAEnBC,MAAAA,SAAS,EAAE;AAFQ,KAAtB;AAIF,GAVD;AAYAX,EAAAA,SAAS,CAACI,gBAAV,CAA2B,OAA3B,EAAoC,UAAAC,CAAC,EAAI;AACtCA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,iBAAiB,CAAC,MAAD,CAAjB;AAEAR,IAAAA,YAAY,CAACS,QAAb,CAAsB;AACnBC,MAAAA,IAAI,EAAE,CADa;AAEnBE,MAAAA,SAAS,EAAE;AAFQ,KAAtB;AAIF,GATD;;AAWA,MAAMJ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAK,SAAS,EAAI;AACpC,QAAIA,SAAS,IAAI,OAAjB,EAA0B;AACvBX,MAAAA,UAAU,CAACY,SAAX,CAAqBC,MAArB,CAA4B,MAA5B;AACAd,MAAAA,SAAS,CAACa,SAAV,CAAoBE,GAApB,CAAwB,MAAxB;AACF,KAHD,MAGO,IAAIH,SAAS,IAAI,MAAjB,EAAyB;AAC7BZ,MAAAA,SAAS,CAACa,SAAV,CAAoBC,MAApB,CAA2B,MAA3B;AACAb,MAAAA,UAAU,CAACY,SAAX,CAAqBE,GAArB,CAAyB,MAAzB;AACF;AACH,GARD;AASF,CA1CD","file":"main.d8ebb8d6.js","sourceRoot":"..","sourcesContent":["window.onload = () => {\n   const listings = Array.from(document.getElementsByClassName('listings'))\n\n   // loop through listings\n   listings.forEach(listing => handleSlider(listing))\n}\n\n// define function to handle slider\nconst handleSlider = listing => {\n   const listingsGrid = listing.getElementsByClassName('listings-grid')[0]\n   const arrowLeft = listing.getElementsByClassName('left')[0]\n   const arrowRight = listing.getElementsByClassName('right')[0]\n\n   if (!listingsGrid || !arrowLeft || !arrowRight) {\n      console.log(listing)\n      return\n   }\n\n   arrowRight.addEventListener('click', e => {\n      // prevent default button behaviour\n      e.preventDefault()\n\n      handleClassChange('right')\n\n      listingsGrid.scrollTo({\n         left: listingsGrid.offsetWidth,\n         behaviour: 'smooth',\n      })\n   })\n\n   arrowLeft.addEventListener('click', e => {\n      e.preventDefault()\n\n      handleClassChange('left')\n\n      listingsGrid.scrollTo({\n         left: 0,\n         behaviour: 'smooth',\n      })\n   })\n\n   const handleClassChange = direction => {\n      if (direction == 'right') {\n         arrowRight.classList.remove('dark')\n         arrowLeft.classList.add('dark')\n      } else if (direction == 'left') {\n         arrowLeft.classList.remove('dark')\n         arrowRight.classList.add('dark')\n      }\n   }\n}"]}